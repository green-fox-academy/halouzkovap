// <auto-generated />
using BasicShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicShop.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20200417064600_SeedData2")]
    partial class SeedData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BasicShop.Models.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityOfStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Nike running shoes for every day sport",
                            Name = "Running shoes",
                            Price = 1000m,
                            QuantityOfStock = 5
                        },
                        new
                        {
                            Id = 2,
                            Description = "Some HP printer that will print pages",
                            Name = "Printer",
                            Price = 3000m,
                            QuantityOfStock = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "0,5 standart coke",
                            Name = "Coca-cola",
                            Price = 25m,
                            QuantityOfStock = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Chicken with fried rice and wokin",
                            Name = "Wokin",
                            Price = 119m,
                            QuantityOfStock = 100
                        },
                        new
                        {
                            Id = 5,
                            Description = "Blue with a corgi on bike",
                            Name = "T-shirt",
                            Price = 300m,
                            QuantityOfStock = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
